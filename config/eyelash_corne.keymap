#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E      &kp R               &kp T                                          &kp UP                &kp Y            &kp U      &kp I            &kp O    &kp P             &kp DELETE
&kp TAB     &kp A  &kp S  &kp D      &kp F               &kp G                                &kp LEFT  &kp ENTER  &kp RIGHT  &kp H            &kp J      &kp K            &kp L    &kp SINGLE_QUOTE  &sk RIGHT_ALT
&sk LSHFT   &kp Z  &kp X  &kp C      &kp V               &kp B            &kp C_PLAY_PAUSE              &kp DOWN              &kp N            &kp M      &kp COMMA        &kp DOT  &kp FSLH          &sl 3
                          &sk LCTRL  &mt LEFT_GUI ENTER  &lt 1 SEMICOLON                                                      &lt 2 BACKSPACE  &kp SPACE  &sk RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUM";
            bindings = <
&kp ESCAPE  &kp EXCL      &kp AT        &kp HASH      &kp DLLR          &kp PRCNT                                     &mmv MOVE_UP                     &kp CARET        &kp AMPS           &kp ASTRK     &kp LPAR      &kp RPAR      &kp BSPC
&trans      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4      &kp NUMBER_5                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_6     &kp NUMBER_7       &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&trans      &trans        &kp TILDE     &kp GRAVE     &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans        &trans        &kp LEFT_WIN  &trans
                                        &trans        &trans            &trans                                                                         &kp BACKSPACE    &trans             &kp COLON
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "MTH";
            bindings = <
&trans  &kp DEL        &trans            &kp UNDERSCORE  &kp PLUS     &kp PAGE_UP                                  &mmv MOVE_UP                     &trans            &trans          &trans          &kp BACKSLASH      &kp PIPE         &trans
&trans  &kp HOME       &kp END           &kp MINUS       &kp EQUAL    &kp PAGE_DOWN                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_ARROW    &kp DOWN_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW    &kp K_MENU       &trans
&trans  &kp LESS_THAN  &kp GREATER_THAN  &kp K_COPY      &kp K_PASTE  &kp SEMICOLON  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp C_PLAY_PAUSE  &kp C_PREVIOUS  &kp C_NEXT      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans
                                         &kp ESCAPE      &trans       &kp SEMICOLON                                                                 &trans            &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        function_layer {
            display-name = "FNT";
            bindings = <
&trans  &kp F1    &kp F2   &kp F3  &kp F4  &kp F5                                             &rgb_ug RGB_HUI                   &kp F6         &kp F7        &kp F8        &kp F9  &kp F10     &trans
&trans  &kp F11   &kp F12  &trans  &trans  &trans                            &rgb_ug RGB_BRD  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR  &trans
&trans  &kp CAPS  &trans   &trans  &trans  &trans         &rgb_ug RGB_TOG                     &rgb_ug RGB_HUD                   &trans         &trans        &trans        &trans  &trans      &kp PRINTSCREEN
                           &trans  &trans  &kp SEMICOLON                                                                        &kp BACKSPACE  &trans        &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
